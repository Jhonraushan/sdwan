var O=Object.defineProperty;var d=(t,a,r)=>a in t?O(t,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[a]=r;var s=(t,a,r)=>d(t,typeof a!="symbol"?a+"":a,r);import{bR as N,r as P,e as o}from"./index-BlEQ5104.js";var m=(t=>(t.ACCEPT="accept",t.REJECT="reject",t.DROP="drop",t))(m||{}),E=(t=>(t.GUEST="guest",t.LAN="lan",t.WAN="wan",t.DMZ="dmz",t.HOTSPOT="hotspot",t.OPENVPN="openvpn",t.RWOPENVPN="rwopenvpn",t.IPSEC="ipsec",t))(E||{}),w=(t=>(t[t.LAN=0]="LAN",t[t.WAN=1]="WAN",t[t.GUEST=2]="GUEST",t[t.DMZ=3]="DMZ",t[t.HOTSPOT=4]="HOTSPOT",t[t.OPENVPN=5]="OPENVPN",t[t.RWOPENVPN=6]="RWOPENVPN",t[t.IPSEC=7]="IPSEC",t[t.CUSTOM=8]="CUSTOM",t))(w||{});class g extends Error{constructor(){super("Invalid configuration loaded from API, have you manually edited the configs?")}}class u{constructor(a,r){s(this,"configName");s(this,"name");s(this,"input");s(this,"output");s(this,"forward");s(this,"interfaces",[]);s(this,"logging",!1);this.configName=a,this.name=r.name,this.input=u.trafficPolicyParser(r.input??"DROP"),this.output=u.trafficPolicyParser(r.output??"DROP"),this.forward=u.trafficPolicyParser(r.forward??"DROP"),this.interfaces=r.network??[],this.logging=r.log==="1"}type(){switch(this.name.toUpperCase()){case"WAN":return 1;case"LAN":return 0;case"GUEST":return 2;case"DMZ":return 3;case"HOTSPOT":return 4;case"OPENVPN":return 5;case"RWOPENVPN":return 6;case"IPSEC":return 7;default:return 8}}static trafficPolicyParser(a){switch(a){case"ACCEPT":return"accept";case"REJECT":return"reject";case"DROP":return"drop";default:throw new g}}}class v{constructor(a,r){s(this,"name");s(this,"label");s(this,"source");s(this,"destination");s(this,"protocolFamily");s(this,"enabled");s(this,"ipSet");this.name=a,this.label=r.name,this.source=r.src,this.destination=r.dest,this.protocolFamily=r.family??"any",this.enabled=r.enabled??!0,this.ipSet=r.ipset}}const f=(t,a)=>{const r=["lan","wan","guest","dmz","hotspot","openvpn","rwopenvpn","ipsec"];let e=r.indexOf(t.name),i=r.indexOf(a.name);return e==-1&&(e=99),i==-1&&(i=99),e<i?-1:e>i?1:0},A=N("firewall",()=>{const t=P(),a=P([]),r=P([]),e=P([]),i=P(!0);function h(){Promise.all([o("ns.firewall","list_zones").then(n=>{a.value=Object.entries(n.data).map(([c,l])=>new u(c,l)).sort(f)}),o("ns.firewall","list_forwardings").then(n=>{r.value=Object.entries(n.data).map(([c,l])=>new v(c,l))}),o("ns.firewall","list_zones_no_aliases").then(n=>{e.value=Object.entries(n.data).map(([c,l])=>new u(c,l)).sort(f)})]).catch(n=>t.value=n).then(()=>i.value=!1)}return{loading:i,error:t,zones:a,forwardings:r,zonesWithoutAliases:e,fetch:h}});export{E as S,m as T,w as Z,A as u,f as z};
